{"name":"Ngloadablecontent","tagline":"angular loadable content module","body":"Angular Loadable Content Module\r\n======================\r\n\r\n# Description\r\n---------\r\n###### This module provides a series of service and directives to show/hide and inject multiple spin.js instances on each wrapper element automatically using httpInterceptor.\r\n\r\n# Installation\r\n---------\r\n```html\r\nbower install ngloadablecontent\r\n```\r\n# Usage\r\n---------\r\n* import script in your page\r\n```html\r\n<script src=\"script/spin.js/spin.js\"></script>\r\n<script src=\"script/src/ngLoadableContent.js\"></script>\r\n```\r\n* inject the module dependency\r\n```js\r\nangular.module('yourProject', ['ngLoadableContent']);\r\n```\r\n* override the default configuration (optional)\r\n```js\r\nyourProject.config(['$loaderConfigProvider',function ($loaderConfigProvider) {\r\n    $loaderConfigProvider.setDefault({color:\"#0047ab\", lines:20, radius:5});\r\n}]);\r\n```\r\n* include the directive on the loadable element\r\n```html\r\n<div id=\"whatever\" ng-loadable=\"[loadable-id]\" options=\"{color:'#360',radius:5,lines:8,overlay:[true/false]}\">Content</div>\r\n```\r\n* inject the $loader service in your controller\r\n```js\r\nyourProject.controller('YourController', ['$loader', '$http', function ($loader, $http) {\r\n    /*your methods*/\r\n    //call the $loader service on the element you want to show\r\n    $loader.spinElement(loadable-id, function(){ //callback });\r\n}]);\r\n```\r\n- support for img tag @landing\r\n```html\r\n<img id=\"big-image\" ng-src=\"[source for image]\" ng-loadable=\"[loadable-id]\" options=\"{options}\"/>\r\n```\r\n- additional css\r\n```css\r\n[ng-loadable]{\r\n    position: relative;\r\n}\r\n.overlay {\r\n    position: (fixed/absolute);\r\n    z-index: 5;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    right: 0;\r\n}\r\n```\r\n# Example\r\n---------\r\nTO be defined\r\n# Options\r\n---------\r\n* overlay //display an overlay\r\n* lines // The number of lines to draw\r\n* length // The length of each line\r\n* width // The line thickness\r\n* radius // The radius of the inner circle\r\n* scale // Scales overall size of the spinner\r\n* corners // Corner roundness (0..1)\r\n* color // #rgb or #rrggbb or array of colors\r\n* opacity // Opacity of the lines\r\n* rotate // The rotation offset\r\n* direction // 1: clockwise, -1: counterclockwise\r\n* speed // Rounds per second\r\n* trail // Afterglow percentage\r\n* fps // Frames per second when using setTimeout() as a fallback for CSS\r\n* zIndex // The z-index (defaults to 10)\r\n* className // The CSS class to assign to the spinner (defaults 'spinner')\r\n* top // Top position relative to parent\r\n* left // Left position relative to parent\r\n* shadow // Whether to render a shadow\r\n* hwaccel // Whether to use hardware acceleration\r\n* position // Element positioning\r\n\r\n# More About spin.js\r\n----------\r\nhttp://fgnass.github.io/spin.js/\r\n\r\nthis software is released under MIT license","google":"UA-61975079-2","note":"Don't delete this file! It's used internally to help with page regeneration."}